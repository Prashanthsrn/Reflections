What happens when you initialize a repository? Why do you need to do it?
	A additional .git directory is addedd, but there are no commits. The git init command is used to crate a repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	
	The staging area stores what items in your working directory you want to put into the repository during the next commit.
	

How can you use the staging area to make sure you have one commit per logical
change?
	
	git diff compares the changes made to the staging area.
	git diff --staged compares the file in the staging area to the most recent commit
	git add "file name" adds a file into the staging area
	git reset "file name" pulls out a file from the staging area

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches help when we want to create multiple versions of the same game or experiment new things i the code while still having one working code available.

How do the diagrams help you visualize the branch structure?

	
    Diagrams assist me in visualizing the branch structure in git by showing me what reachability is visually between two commits from the same/ different branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
